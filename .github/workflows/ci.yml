name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  TF_VERSION: "1.9.0"
  TERRATEST_VERSION: "0.46.0"

jobs:
  validate:
    name: Validate Terraform
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}

    - name: Terraform Format Check
      run: terraform fmt -check -recursive

    - name: Terraform Init
      run: terraform init

    - name: Terraform Validate
      run: terraform validate

  validate-examples:
    name: Validate Examples
    runs-on: ubuntu-latest
    strategy:
      matrix:
        example: [basic, complete, with-peering]
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}

    - name: Terraform Init - ${{ matrix.example }}
      run: |
        cd examples/${{ matrix.example }}
        terraform init

    - name: Terraform Validate - ${{ matrix.example }}
      run: |
        cd examples/${{ matrix.example }}
        terraform validate

    - name: Terraform Plan - ${{ matrix.example }}
      run: |
        cd examples/${{ matrix.example }}
        cp terraform.tfvars.example terraform.tfvars
        # Skip plan for now as it requires Azure authentication
        echo "Skipping terraform plan - requires Azure authentication"
        # terraform plan

  docs:
    name: Generate Docs
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Generate terraform docs
      uses: terraform-docs/gh-actions@main
      with:
        working-dir: .
        output-file: TERRAFORM_DOCS.md
        output-method: inject
        git-push: "false"
